# import sources
vcs-import . < microros.repos


# Run docker
docker run -it --privileged --mount type=bind,source="/home/Javier/MicroROS/MicroRos_Test",target="/root/ros2_ws/" --net=host microros


# Build
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug --packages-select rmw_micrortps
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON --packages-up-to actuator
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON --packages-up-to actuator
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_TOOLCHAIN_FILE="/root/ros2_ws/arm_toolchain.cmake" --packages-up-to actuator
colcon build --cmake-args -DVERBOSE=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_TOOLCHAIN_FILE="/root/ros2_ws/arm_toolchain.cmake" -DBUILD_TESTING=0 --packages-up-to actuator display position_sensor


# Configure enviroment
. ~/ros2_ws/install/local_setup.bash


# Exec
install/example_subscriber_int32/lib/example_subscriber_int32/./example_subscriber_int32
install/example_publisher_int32/lib/example_publisher_int32/./example_publisher_int32


# Debuging
gdbserver 127.0.0.1:8081 install/example_subscriber_int32/lib/example_subscriber_int32/./example_subscriber_int32
gdbserver 127.0.0.1:8080 install/example_publisher_int32/lib/example_publisher_int32/./example_publisher_int32


# Run agent
install/micrortps_agent/bin/./MicroRTPSAgent udp 8881


# Install cross compile
apt install gcc-arm-linux-gnueabi g++-arm-linux-gnueabi


# Remplace try_run()
THREADS_PTHREAD_ARG:STRING=PLEASE_FILL_OUT-FAILED_TO_RUN
THREADS_PTHREAD_ARG:STRING=2

# Ignore package
COLCON_IGNORE


# Debug Configure
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/install/example_publisher_int32/lib/example_publisher_int32/example_publisher_int32",
            "program": "${workspaceFolder}/install/example_subscriber_int32/lib/example_subscriber_int32/example_subscriber_int32",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "miDebuggerServerAddress": "127.0.0.1:9090",
            "sourceFileMap": { "/root/ros2_ws": "${workspaceFolder}" },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
            
        }
    ]
}


# Debug call
gdbserver 127.0.0.1:9090 /root/ros2_ws/install/


